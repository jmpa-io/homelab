---
- name: Setup k3s.
  hosts: proxmox_hosts
  strategy: free
  collections:
    - community.crypto
  vars:
    proxmox_node_name: "{{ host.name }}"
    proxmox_node_id: "{{ inventory_hostname.split('_')[-1] | int }}"
    proxmox_node_ip: "{{ host.ipv4 }}"
    proxmox_node_bridge_ip: "{{ host.bridge.ipv4 }}"
    proxmox_node_bridge_name: "{{ host.bridge.name }}"
    # ---
    proxmox_api_ip: "{{ proxmox_node_ip }}"
    proxmox_api_token_secret: "{{ proxmox.api_token }}"
    # ---
    vm_password: "{{ ansible_become_pass }}"
    vm_common_tags: [ k3s ]

  tasks:
    - name: Create K3s master(s).
      ansible.builtin.include_role:
        name: "{{ root_playbook_directory }}/roles/create-vm"
      loop: "{{ k3s.masters }}"
      loop_control:
        index_var: i
        loop_var: master_ipv4
      vars:
        create_vm__proxmox_node_name: "{{ proxmox_node_name }}"
        create_vm__proxmox_node_bridge_name: "{{ proxmox_node_bridge_name }}"
        create_vm__proxmox_api_ip: "{{ proxmox_api_ip }}"
        create_vm__proxmox_api_token_secret: "{{ proxmox_api_token_secret }}"
        create_vm__vm_vmid: "{{ proxmox_node_id }}{{ common.k3s.masters_ips_start_range + i }}"
        create_vm__vm_hostname: "k3s-master-{{ proxmox_node_id }}-{{ i + 1 }}"
        create_vm__vm_password: "{{ vm_password }}"
        create_vm__vm_gateway: "{{ proxmox_node_bridge_ip }}"
        create_vm__vm_ip_with_cidr: "{{ master_ipv4 }}/{{ common.subnet.ipv4_cidr }}"
        create_vm__vm_tags: "{{ vm_common_tags + ['master'] }}"
        create_vm__vm_clone_from_vmid: "{{ 10000 + inventory_hostname.split('_')[-1] | int }}"

    - name: Create K3s node(s).
      ansible.builtin.include_role:
        name: "{{ root_playbook_directory }}/roles/create-vm"
      loop: "{{ k3s.nodes }}"
      loop_control:
        index_var: i
        loop_var: node_ipv4
      vars:
        create_vm__proxmox_node_name: "{{ proxmox_node_name }}"
        create_vm__proxmox_node_bridge_name: "{{ proxmox_node_bridge_name }}"
        create_vm__proxmox_api_ip: "{{ proxmox_api_ip }}"
        create_vm__proxmox_api_token_secret: "{{ proxmox_api_token_secret }}"
        create_vm__vm_clone_from_vmid: "{{ 10000 + inventory_hostname.split('_')[-1] | int }}"
        create_vm__vm_vmid: "{{ proxmox_node_id }}{{ common.k3s.nodes_ips_start_range + i }}"
        create_vm__vm_hostname: "k3s-node-{{ proxmox_node_id }}-{{ i + 1 }}"
        create_vm__vm_password: "{{ vm_password }}"
        create_vm__vm_gateway: "{{ proxmox_node_bridge_ip }}"
        create_vm__vm_ip_with_cidr: "{{ node_ipv4 }}/{{ common.subnet.ipv4_cidr }}"
        create_vm__vm_tags: "{{ vm_common_tags + ['node'] }}"

    - name: Ensure old known_hosts are cleared.
      delegate_to: localhost
      loop: "{{ k3s.masters + k3s.nodes }}"
      loop_control:
        loop_var: ip
      ansible.builtin.known_hosts:
        name: "{{ ip }}"
        state: absent
      ignore_errors: true

    - name: Add known_hosts.
      delegate_to: localhost
      loop: "{{ k3s.masters + k3s.nodes }}"
      loop_control:
        loop_var: ip
      ansible.builtin.known_hosts:
        name: "{{ ip }}"
        key: "{{ lookup('pipe', 'ssh-keyscan -T 10 ' + ip) }}"
        state: present

