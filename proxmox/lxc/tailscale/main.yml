---

- name: Setup Tailscale.
  hosts: all
  become: true
  vars:
    proxmox_node_name: "{{ host.name }}"
    proxmox_node_id: "{{ inventory_hostname.split('_')[-1] | int }}"
    proxmox_node_ip: "{{ host.ipv4 }}"
    proxmox_node_bridge_ip: "{{ host.bridge.ipv4 }}"
    proxmox_node_bridge_name: "{{ host.bridge.name }}"
    # ---
    proxmox_api_ip: "{{ proxmox_node_ip }}"
    proxmox_api_token_secret: "{{ proxmox.api_token }}"
    # ---
    tailscale_oauth_private_key: "{{ tailscale_oauth_private_key }}"
    tailscale_routes: "{{ host.bridge.subnet }}/{{ host.bridge.ipv4_cidr }}"
    tailscale_dns: 127.0.0.1
    tailscale_tags: [ jmpa-server ]
    # ---
    lxc_container_id: "{{ services.tailscale_gateway.container_id }}"
    lxc_container_vmid: "{{ proxmox_node_id }}{{ '%02d' | format(lxc_container_id) }}"
    lxc_container_hostname: tailscale
    lxc_container_root_password: "{{ ansible_become_pass }}"
    lxc_container_ip_with_cidr: "{{ services.tailscale_gateway.ipv4_with_cidr }}"
    lxc_container_tags: [ tailscale, vpn ]

  tasks:
    - name: Create LXC Container.
      ansible.builtin.include_role:
        name: "{{ root_playbook_directory }}/roles/create-lxc"
      vars:
        create_lxc_node_ip: "{{ proxmox_node_ip }}"
        create_lxc_node_name: "{{ proxmox_node_name }}"
        create_lxc_node_bridge_ip: "{{ proxmox_node_bridge_ip }}"
        create_lxc_node_bridge_name: "{{ proxmox_node_bridge_name }}"
        create_lxc_proxmox_api_ip: "{{ proxmox_api_ip }}"
        create_lxc_proxmox_api_token_secret: "{{ proxmox_api_token_secret }}"
        create_lxc_container_id: "{{ lxc_container_vmid }}"
        create_lxc_container_hostname: "{{ lxc_container_hostname }}"
        create_lxc_container_root_password: "{{ lxc_container_root_password }}"
        create_lxc_container_subnet: "{{ lxc_container_ip_with_cidr }}"
        create_lxc_container_tags: "{{ lxc_container_tags }}"
      register: create_container

    # PLEASE NOTE:
    # This task must be done after the creation of the container because the
    # container is refreshed during the LXC container creation role.
    - name: Add TUN device configuration for LXC Container.
      when: create_container is success
      ansible.builtin.blockinfile:
        path: "/etc/pve/lxc/{{ lxc_container_vmid }}.conf"
        block: |
          lxc.cgroup2.devices.allow = c 10:200 rwm
          lxc.mount.entry = /dev/net/tun dev/net/tun none bind,create=file
      delegate_to: "{{ proxmox_node_ip }}"

    - name: Restart LXC Container to apply TUN configuration.
      when: create_container is success
      ansible.builtin.shell: pct reboot "{{ lxc_container_vmid }}"
      delegate_to: "{{ proxmox_node_ip }}"

    - name: Install Tailscale.
      when: create_container is success
      ansible.builtin.include_role:
        name: "{{ root_playbook_directory }}/roles/execute-script-in-lxc"
      vars:
        execute_script_in_lxc_node_ip: "{{ proxmox_node_ip }}"
        execute_script_in_lxc_container_id: "{{ lxc_container_vmid }}"
        execute_script_in_lxc_script_source: tmp/install-tailscale.sh.j2
        execute_script_in_lxc_script_destination: /tmp/install_tailscale.sh
        execute_script_in_lxc_copy_to_node_show_difference: false

- name: Update Tailscale DNS.
  hosts: all # NOTE: this must NOT be localhost or else we can't access inventory variables in this section.
  tasks:
    - name: Collect DNS nameservers.
      run_once: true
      set_fact:
        dns_nameservers: "{{ groups['all'] | map('extract', hostvars, 'ansible_host') | select('defined') | list }}"

    - name: Update Tailscale with DNS nameservers.
      run_once: true
      delegate_to: localhost
      command: bin/00-update-dns-nameservers.sh "{{ dns_nameservers | join(',') }}"

