
# Logs.
# log_format custom_log '"Request: $request\n Status: $status\n Request_URI: $request_uri\n Host: $host\n Client_IP: $remote_addr\n Proxy_IP(s): $proxy_add_x_forwarded_for\n Proxy_Hostname: $proxy_host\n Real_IP: $http_x_real_ip\n User_Client: $http_user_agent"';

# # HTTP -> HTTPS redirect.
# server {
#     listen 80;
#     listen [::]:80;
#     server_name _;
#     return 301 https://$host$request_uri;
# }

# Proxmox.
upstream proxmox {
    least_conn;

{% for host in groups['all'] %}
    server {{ hostvars[host].ansible_host }}; # {{ host }}.
{% endfor -%}
}

{# Group services across servers. #}
{% set service_map = {} %}
{% for server in servers.values() %}
    {% for record in server.records %}
        {% if record.url in service_map %}
            {% set _ = service_map[record.url].append(record.ip) %}
        {% else %}
            {% set _ = service_map.update({ record.url: [record.ip] }) %}
        {% endif -%}
    {% endfor -%}
{% endfor -%}

{# Create entries. #}
{% for url, ips in service_map.items() %}

# {{ url | title }}.
upstream {{ url }} {
    least_conn;

{% for ip in ips %}
    server {{ ip }};
{% endfor %}
}

server {
    # server_name "{{ url }}.{{ hostvars[inventory_hostname].domain }}";

    listen 443 ssl;
    listen [::]:443 ssl;
    server_name "{{ url }}";

    # access_log "/var/log/nginx/{{ url }}-access-logs.log" custom_log;
    # error_log  "/var/log/nginx/{{ url }}-errors-logs.log" warn;

    # ssl_certificate /etc/ssl/certs/selfsigned.crt;
    # ssl_certificate_key /etc/ssl/private/selfsigned.key;

    location / {
        proxy_pass "https://{{ url }}";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
    }
}

{% endfor %}

