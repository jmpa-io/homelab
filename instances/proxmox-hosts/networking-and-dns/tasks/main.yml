---

- name: Setup apt + install packages.
  include_tasks: tasks/apt/main.yml

- name: Install 'check-network.sh' script.
  become: true
  ansible.builtin.template:
    src: usr/local/bin/check-network.sh
    dest: /usr/local/bin/check-network.sh
    owner: root
    group: root
    mode: '0755'

# PLEASE NOTE: This step has no notify as networking is restarted / systemd is
# reloaded below. If this isn't the case anymore, add a notify here.
- name: Add 'network-autorestart' service (from template).
  become: true
  ansible.builtin.template:
    src: etc/systemd/system/network-autorestart.service
    dest: /etc/systemd/system/network-autorestart.service
    owner: root
    group: root
    mode: '0644'
    backup: true

- name: Ensure 'network-autorestart' service is enabled + started.
  become: true
  ansible.builtin.systemd:
    name: network-autorestart
    enabled: yes
    state: started

- name: Update '/etc/network/interfaces' (from template).
  become: true
  ansible.builtin.template:
    src: etc/network/interfaces.j2
    dest: /etc/network/interfaces
    owner: root
    group: root
    mode: '0644'
    backup: true
  notify: Restart 'networking' service.

- name: Update '/etc/hosts' (from template).
  become: true
  ansible.builtin.template:
    src: etc/hosts.j2
    dest: /etc/hosts
    owner: root
    group: root
    mode: '0644'
    backup: true

- name: Update '/etc/resolv.conf' (from template).
  become: true
  ansible.builtin.template:
    src: etc/resolv.conf.j2
    dest: /etc/resolv.conf
    owner: root
    group: root
    mode: '0644'
    backup: true

- name: Update '/etc/dnsmasq.conf' (from template).
  become: true
  ansible.builtin.template:
    src: etc/dnsmasq.conf.j2
    dest: /etc/dnsmasq.conf
    owner: root
    group: root
    mode: '0644'
    backup: true
  notify: Restart 'dnsmasq' service.
