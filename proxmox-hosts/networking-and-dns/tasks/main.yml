---

- name: Install required apt packages
  become: true
  ansible.builtin.apt:
    name: "{{ packages }}"
    state: latest
  when: packages is defined and packages | length > 0
#
- name: Copy over check-network.sh script
  become: true
  ansible.builtin.template:
    src: usr/local/bin/check-network.sh
    dest: /usr/local/bin/check-network.sh
    owner: root
    group: root
    mode: '0755'

- name: Add network-autorestart service
  become: true
  ansible.builtin.template:
    src: etc/systemd/system/network-autorestart.service
    dest: /etc/systemd/system/network-autorestart.service
    owner: root
    group: root
    mode: '0644'
    backup: true
    # NOTE: no notify here as networking is restarted & systemd is reloaded below.

- name: Ensure network-autorestart is enabled + started
  become: true
  ansible.builtin.systemd:
    name: network-autorestart
    enabled: yes
    state: started

- name: Update /etc/network/interfaces
  become: true
  ansible.builtin.template:
    src: etc/network/interfaces.j2
    dest: /etc/network/interfaces
    owner: root
    group: root
    mode: '0644'
    backup: true
  notify: Restart networking

- name: Update /etc/hosts
  become: true
  ansible.builtin.template:
    src: etc/hosts.j2
    dest: /etc/hosts
    owner: root
    group: root
    mode: '0644'
    backup: true

- name: Update /etc/resolv.conf
  become: true
  ansible.builtin.template:
    src: etc/resolv.conf.j2
    dest: /etc/resolv.conf
    owner: root
    group: root
    mode: '0644'
    backup: true

- name: Update /etc/dnsmasq.conf
  become: true
  ansible.builtin.template:
    src: etc/dnsmasq.conf.j2
    dest: /etc/dnsmasq.conf
    owner: root
    group: root
    mode: '0644'
    backup: true
  notify: Restart dnsmasq
