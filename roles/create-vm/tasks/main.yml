---

- name: Ensure required variables are set.
  fail:
    msg: "Required variable {{ item }} is missing!"
  when: vars[item] is not defined
  loop:
    - create_vm__proxmox_node_name
    - create_vm__proxmox_node_bridge_name
    # ---
    - create_vm__proxmox_api_ip
    - create_vm__proxmox_api_token_secret
    # ---
    - create_vm__vmid
    - create_vm__hostname
    - create_vm__password
    - create_vm__ip_with_cidr
    - create_vm__gateway
    - create_vm__tags

- name: Create VM, refreshed if needed.
  block:
    - name: Stop and / or remove existing VM.
      community.general.proxmox_kvm:
        api_host: "{{ create_vm__proxmox_api_ip }}"
        api_user: "{{ create_vm__proxmox_api_user }}"
        api_token_id: "{{ create_vm__proxmox_api_token_id }}"
        api_token_secret: "{{ create_vm__proxmox_api_token_secret }}"
        node: "{{ create_vm__proxmox_node_name }}"
        vmid: "{{ create_vm__vmid }}"
        state: "{{ item }}"
        timeout: 300
      loop:
        - stopped
        - absent
      ignore_errors: true

    - name: Create VM (from template).
      community.general.proxmox_kvm:
        api_host: "{{ create_vm__proxmox_api_ip }}"
        api_user: "{{ create_vm__proxmox_api_user }}"
        api_token_id: "{{ create_vm__proxmox_api_token_id }}"
        api_token_secret: "{{ create_vm__proxmox_api_token_secret }}"
        node: "{{ create_vm__proxmox_node_name }}"
        name: "{{ create_vm__hostname }}"
        # ---
        clone: "{{ create_vm__clone_from_name }}"
        newid: "{{ create_vm__vmid }}"
        ciuser: "{{ create_vm__username }}"
        cipassword: "{{ create_vm__password }}"
        # ipconfig:
        #   ipconfig0: "ip={{ create_vm__ip_with_cidr }},gw={{ create_vm__gateway }}"
        tags: "{{ create_vm__tags }}"
        full: false
        state: present
        timeout: 600

    - name: Set ipconfig for instance (not working above, for some reason).
      become: true
      shell: |
        set -e
        qm set {{ create_vm__vmid }} --ipconfig0 'ip={{ create_vm__ip_with_cidr }},gw={{ create_vm__gateway}}'

    - name: Start VM.
      community.general.proxmox_kvm:
        api_host: "{{ create_vm__proxmox_api_ip }}"
        api_user: "{{ create_vm__proxmox_api_user }}"
        api_token_id: "{{ create_vm__proxmox_api_token_id }}"
        api_token_secret: "{{ create_vm__proxmox_api_token_secret }}"
        node: "{{ create_vm__proxmox_node_name }}"
        vmid: "{{ create_vm__vmid }}"
        state: started

    - name: Wait for SSH to become available.
      wait_for:
        host: "{{ create_vm__ip_with_cidr.split('/')[0] }}"
        port: 22
        delay: 10
        timeout: 120

  rescue:
    - name: Error encountered, clean up VM if able.
      community.general.proxmox_kvm:
        api_host: "{{ create_vm__proxmox_api_ip }}"
        api_user: "{{ create_vm__proxmox_api_user }}"
        api_token_id: "{{ create_vm__proxmox_api_token_id }}"
        api_token_secret: "{{ create_vm__proxmox_api_token_secret }}"
        node: "{{ create_vm__proxmox_node_name }}"
        vmid: "{{ create_vm__vmid }}"
        state: "{{ item }}"
      loop:
        - stopped
        - absent
      ignore_errors: true
