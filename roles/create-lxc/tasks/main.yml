---

- name: Ensure required variables are set.
  fail:
    msg: "Required variable {{ item }} is missing!"
  when: vars[item] is not defined
  loop:
    - create_lxc__proxmox_node_ip
    - create_lxc__proxmox_node_name
    - create_lxc__proxmox_node_bridge_ip
    - create_lxc__proxmox_node_bridge_name
    # ---
    - create_lxc__proxmox_api_ip
    - create_lxc__proxmox_api_token_secret
    # ---
    - create_lxc__lxc_vmid
    - create_lxc__lxc_hostname
    - create_lxc__lxc_root_password
    - create_lxc__lxc_subnet
    - create_lxc__lxc_tags

- name: Create LXC, refreshed if needed.
  block:
    - name: Stop and / or remove existing LXC.
      community.general.proxmox:
        api_host: "{{ create_lxc__proxmox_api_ip }}"
        api_user: "{{ create_lxc__proxmox_api_user }}"
        api_token_id: "{{ create_lxc__proxmox_api_token_id }}"
        api_token_secret: "{{ create_lxc__proxmox_api_token_secret }}"
        node: "{{ create_lxc__proxmox_node_name }}"
        vmid: "{{ create_lxc__lxc_vmid }}"
        state: "{{ item }}"
        unprivileged: true
      loop:
        - stopped
        - absent
      ignore_errors: true

    - name: Create LXC.
      community.general.proxmox:
        api_host: "{{ create_lxc__proxmox_api_ip }}"
        api_user: "{{ create_lxc__proxmox_api_user }}"
        api_token_id: "{{ create_lxc__proxmox_api_token_id }}"
        api_token_secret: "{{ create_lxc__proxmox_api_token_secret }}"
        node: "{{ create_lxc__proxmox_node_name }}"
        vmid: "{{ create_lxc__lxc_vmid }}"
        hostname: "{{ create_lxc__lxc_hostname }}"
        ostemplate: "{{ create_lxc__lxc_ostemplate }}"
        cores: "{{ create_lxc__lxc_cores }}"
        memory: "{{ create_lxc__lxc_memory }}"
        # disk: "{{ create_lxc__lxc_disk }}"
        tags: "{{ create_lxc__lxc_tags }}"
        password: "{{ create_lxc__lxc_root_password }}"
        netif:
          net0: "name=eth0,gw={{ create_lxc__proxmox_node_bridge_ip }},ip={{ create_lxc__lxc_subnet }},bridge={{ create_lxc__proxmox_node_bridge_name }}"
        nameserver: "{{ create_lxc__proxmox_node_ip }}"
        unprivileged: true
        features:
          - nesting=1
        pubkey: "{{ lookup('file', create_lxc__lxc_ssh_pubkey) }}"
        onboot: 1
        state: present
        timeout: 300

    - name: Start LXC.
      community.general.proxmox:
        api_host: "{{ create_lxc__proxmox_api_ip }}"
        api_user: "{{ create_lxc__proxmox_api_user }}"
        api_token_id: "{{ create_lxc__proxmox_api_token_id }}"
        api_token_secret: "{{ create_lxc__proxmox_api_token_secret }}"
        node: "{{ create_lxc__proxmox_node_name }}"
        vmid: "{{ create_lxc__lxc_vmid }}"
        hostname: "{{ create_lxc__lxc_hostname }}"
        state: started

    - name: Wait for SSH to become available.
      wait_for:
        host: "{{ create_lxc__lxc_subnet | split('/') | first }}"
        port: 22
        delay: 10
        timeout: 30

    - name: Install dependencies inside LXC.
      ansible.builtin.include_role:
        name: "{{ root_playbook_directory }}/roles/execute-script-in-lxc"
      vars:
        execute_script_in_lxc__proxmox_node_ip: "{{ create_lxc__proxmox_node_ip }}"
        execute_script_in_lxc__lxc_vmid: "{{ create_lxc__lxc_vmid }}"
        execute_script_in_lxc__script_source: "{{ root_playbook_directory }}/roles/create-lxc/templates/install-deps.sh.j2"
        execute_script_in_lxc__script_destination: /tmp/install_deps.sh

  rescue:
    - name: Error encountered, clean up LXC if able.
      community.general.proxmox:
        api_host: "{{ create_lxc__proxmox_api_ip }}"
        api_user: "{{ create_lxc__proxmox_api_user }}"
        api_token_id: "{{ create_lxc__proxmox_api_token_id }}"
        api_token_secret: "{{ create_lxc__proxmox_api_token_secret }}"
        node: "{{ create_lxc__proxmox_node_name }}"
        vmid: "{{ create_lxc__lxc_vmid }}"
        state: "{{ item }}"
        unprivileged: true
      loop:
        - stopped
        - absent
      ignore_errors: true

