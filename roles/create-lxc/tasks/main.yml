---

- name: Ensure required variables are set.
  fail:
    msg: "Required variable {{ item }} is missing!"
  when: vars[item] is not defined
  loop:

    # proxmox - node.
    - node_ip
    - node_name
    - node_bridge_ip
    - node_bridge_name

    # proxmox - api.
    - api_ip
    - api_token_secret

    # lxc - container.
    - container_id
    - container_hostname
    - container_root_password
    - container_subnet

- name: Create LXC Container, refreshed if needed.
  block:
    - name: Stop and / or remove existing LXC container.
      community.general.proxmox:
        api_host: "{{ api_ip }}"
        api_user: "{{ api_user }}"
        api_token_id: "{{ api_token_id }}"
        api_token_secret: "{{ api_token_secret }}"
        node: "{{ node_name }}"
        vmid: "{{ container_id }}"
        state: "{{ item }}"
        unprivileged: true
      loop:
        - stopped
        - absent
      ignore_errors: true

    - name: Create LXC container.
      community.general.proxmox:
        api_host: "{{ api_ip }}"
        api_user: "{{ api_user }}"
        api_token_id: "{{ api_token_id }}"
        api_token_secret: "{{ api_token_secret }}"
        node: "{{ node_name }}"
        vmid: "{{ container_id }}"
        hostname: "{{ container_hostname }}"
        ostemplate: "{{ container_ostemplate }}"
        cores: "{{ container_cores }}"
        memory: "{{ container_memory }}"
        # disk: "{{ container_disk }}"
        tags: "{{ container_tags }}"
        password: "{{ container_root_password }}"
        netif:
          net0: "name=eth0,gw={{ node_bridge_ip }},ip={{ container_subnet }},bridge={{ node_bridge_name }}"
        nameserver: "{{ node_ip }}"
        unprivileged: true
        features:
          - nesting=1
        pubkey: "{{ lookup('file', container_ssh_pubkey) }}"
        onboot: 1
        state: present

    - name: Start LXC container.
      community.general.proxmox:
        api_host: "{{ api_ip }}"
        api_user: "{{ api_user }}"
        api_token_id: "{{ api_token_id }}"
        api_token_secret: "{{ api_token_secret }}"
        node: "{{ node_name }}"
        vmid: "{{ container_id }}"
        hostname: "{{ container_hostname }}"
        state: started

    - name: Wait for SSH to become available.
      wait_for:
        host: "{{ container_subnet | split('/')[0] }}"
        port: 22
        delay: 10
        timeout: 30

    - name: Install dependencies inside LXC container.
      ansible.builtin.include_role:
        name: "{{ root_playbook_directory }}/roles/execute-script-in-lxc"
      vars:
        node_ip: "{{ node_ip }}"
        container_id: "{{ container_id }}"
        script_source: "{{ root_playbook_directory }}/roles/create-lxc/templates/install-deps.sh.j2"
        script_destination: /tmp/install_deps.sh

  rescue:
    - name: Error encountered, clean up LXC container if able.
      community.general.proxmox:
        api_host: "{{ api_ip }}"
        api_user: "{{ api_user }}"
        api_token_id: "{{ api_token_id }}"
        api_token_secret: "{{ api_token_secret }}"
        node: "{{ node_name }}"
        vmid: "{{ container_id }}"
        state: "{{ item }}"
        unprivileged: true
      loop:
        - stopped
        - absent
      ignore_errors: true

